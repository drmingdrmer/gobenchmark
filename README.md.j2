# gobenchmark
A collection of benchmarks of basic operation, as a guide for tuning.

When digging deeper and deeper into performance tuning, we found the performance
of some basic operations varies widely, in a counter-intuitive way.
These differences are critical and does impact performance.
Thus we have benchmarked basic operations, to establish a solid guide for people
working on performance critical programs.


# What it is NOT

- Cache missing or memory layout caused performance issues are not included yet.


# Use it

The statistics listed below gives us a intuitive view of basic operation performances.
**But it is strongly recommended to re-benchmark it on your platform before using it**,
since performance may vary on different architectures.


# Install

```sh
go get github.com/openacid/gobenchmark

make ben # run the benchmark
```

# Tips for tuning

According to the benchmark, there are some general tips for tuning computation
dense programs:

-   Usually using static data is faster:
    -   **Most of the time**, operating on a const is faster than on a variable.
    -   Using array is (about 2 times) faster than using a slice.

-   Integer are faster than float number.

-   Usually `/` and `%` are very slow. Use shift if possible.



# Pre-built benchmarks

```txt
{% include "benchmark.txt" %}
```
